# Django Base Template

## Goals
1. Start with a working deploy config.
2. Pre-configure the apps that we use on every project.
3. Provide useful fabric scripts for managing remote servers.
4. Develop with the same environment as the production server, from any machine.

## Assumptions
This project assumes that you want to use the following:

*   [uwsgi](http://projects.unbit.it/uwsgi/) (Django runner)
*   [nginx](http://wiki.nginx.org/Main) (static file-server)
*   [upstart](http://upstart.ubuntu.com/) (init daemon)
*   [postgresql](http://www.postgresql.org/) (database)
*   [fabric](http://docs.fabfile.org/en/1.4.0/index.html) (deployment)

## Requirements
This project requires the following:

1. [An Ubuntu 10.04 server](http://www.ubuntu.com/)
2. [Vagrant](http://vagrantup.com/)
3. [pip](http://pypi.python.org/pypi/pip)

## What you get for free

*   [django-extensions](http://packages.python.org/django-extensions/) (with [Werkzeug](http://werkzeug.pocoo.org/))
*   [path.py](https://github.com/dottedmag/path.py)
*   [South](http://south.aeracode.org/)
*   [django-grappelli](http://readthedocs.org/docs/django-grappelli/en/latest/)
*   [django-compressor](http://django_compressor.readthedocs.org/en/latest/index.html)
*   [sorl-thumbnail](http://thumbnail.sorl.net/) (with PIL using [pillow](http://pypi.python.org/pypi/Pillow))
*   [django-debug-toolbar](https://github.com/django-debug-toolbar/django-debug-toolbar) (for local dev only)
*   [ipython](http://ipython.org/)

---

## Initial setup
    pip install fabric
    vagrant up
    fab dev bootstrap

This will take awhile (like, awhile). You may be prompted for input during the `fab dev bootstrap` step, so you will need to bear it out.

When the initial setup is finished, you will have a running server at [localhost:8888](http://localhost:8888).

## Development
Use vagrant to manage the dev server. Commands include:

*   `vagrant up`: start server
*   `vagrant reload`: reload server
*   `vagrant suspend`: suspend server
*   `vagrant destroy`: destroy vm (useful for testing the bootstrap command)
*   `vagrant ssh`: shell into dev server

Get the full list of commands by running `vagrant -h`

### Development Server
To access django's local dev server, you have two options - you can go thru the pain of setting up your local machine, or you can just use the vm that we've already set up.

If you choose the latter option, follow these simple instructions:

    vagrant ssh
    cd $VAGRANT_ROOT
    workon $PROJECT_NAME
    ./manage.py runserver_plus 0.0.0.0:8000

You should now be able to access the dev server on [localhost:8000](http://localhost:8000)

## Deployment
This project uses fabric for deployment + provisioning. Several commands are already included (replace 'xxx' with the name of your env from `environments.py`):

*   `fab xxx bootstrap`: Install dependencies, deploy initial app
*   `fab xxx deploy`: Deploy latest git commit to server
*   `fab xxx rollback`: Roll back to previous deploy

### Note:

*   Do NOT use sudo when running `pip` commands. We use [pythonbrew](https://github.com/utahta/pythonbrew) to avoid that mess.
*   Nginx, uWSGI, and Postgres run as the user specified in `environments.py`
